#%SED_GAWK_PATH%

# ------------------------------------------------------------
# cawk is subjet to a MIT open-source licence
# please refer to the MIT licence file for further information
#
# for %SED_VAR% change like GAWK_PATH, etc. please refer to
# file support/tests.sed for further information
#
# purpose : check vars def not ref and ref not def
# author  : pierre bertrand
# ------------------------------------------------------------

@include %SED_INCLUDE_PATH%

BEGIN {
}

BEGINFILE {
    pass = 1;
}

BEGIN {
    delete DEF;
    delete REF;
}

# var def ----
/^set[ \t]*\w+[ \t]*=/ {
    match($0, /^set[ \t]*(\w+)[ \t]*=/, var)
    if (var[1] != "") {
        DEF[var[1]] = FNR;
    }
}

# var ref ---- 
/\$\w+/ {
    while (match($0, /\$\w+/, ref)) {
        ref_var = substr(ref[0], 2)
        REF[ref_var] = FNR;
        $0 = substr($0, RSTART + RLENGTH)
    }
}

ENDFILE {

   # vars def and not ref ----
    pass = 1;
    for (id in DEF) {
        if (!(id in REF)) {
            print_err("global_vardefref_set.checkpoint-fwcli.gawk","var def not ref <<"id">>",DEF[id],"low","error");
            pass=0;
        }
    }
    if (pass) print_err("global_vardefref_set.checkpoint-fwcli.gawk","no var def not ref",0,"low","pass");

    # vars ref and not def ----
    pass = 1;
    for (id in REF) { 
        if (!(id in DEF)) {
            print_err("global_vardefref_set.checkpoint-fwcli.gawk","var ref not def <<"id">>",REF[id],"high","error");
            pass = 0;
        }
    }
    if (pass) print_err("global_vardefref_set.checkpoint-fwcli.gawk","no var ref not def",0,"high","pass");
}

END {
}
