#%SED_GAWK_PATH%

# ------------------------------------------------------------
# cawk is subjet to a MIT open-source licence
# please refer to the MIT licence file for further information
#
# for %SED_VAR% change like SED_GAWK_PATH, etc. please refer to
# file support/tests.sed for further information
#
# purpose : this test generate a cawk report
# ------------------------------------------------------------

@include %SED_INCLUDE_PATH%

BEGIN {
}

BEGINFILE {
	pass = 0;
	error = 0;
	high = 0;
	medium = 0;
	low = 0;
	delete files;
	delete tests;
}

/;error$/ {
	split($0,tmp,";");
	files[tmp[1]];
	tests[tmp[2]];
	error += 1;
}

/;pass$/ {
	split($0,tmp,";");
	files[tmp[1]];
	tests[tmp[2]];
	pass += 1;
}

/;high;/ && /;error$/ {
	high += 1;
}

/;medium;/ && /;error$/ {
	medium += 1;
}

/;low;/ && /;error$/ {
	low += 1;
}

ENDFILE {
	print "number_of_checks " length(files) * length(tests);
	print "number_of_files " length(files); 
	print "number_of_tests " length(tests); 
	for(id in tests) printf("	test %s\n",id);
	if ( ( pass + error ) > 0) {
		decimal = sprintf("%.1f", 100 * pass / ( pass + error))
		print "number_of_pass " pass " (" decimal "%)";
	} else {
		print "number_of_pass " pass;
	}
	if ( ( pass + error ) > 0) {
		decimal = sprintf("%.1f", 100 * error / ( pass + error))
		print "number_of_error " error " (" decimal "%)";
	} else {
		print "number_of_error " error;
	}
	if ( error > 0 ) {
		decimal = sprintf("%.1f", 100 * high / error )
		print "\tnumber_of_error_high " high " (" decimal "%)";
	} else {
		print "\tnumber_of_error_high " high;
	}
	if ( error > 0 ) {
		decimal = sprintf("%.1f", 100 * medium / error )
		print "\tnumber_of_error_medium " medium " (" decimal "%)";
	} else {
		print "\tnumber_of_error_medium " medium;
	}
	if ( error > 0 ) {
		decimal = sprintf("%.1f", 100 * low / error )
		print "\tnumber_of_error_low " low " (" decimal "%)";
	} else {
		print "\tnumber_of_error_low " low;
	}
}

END {
}
