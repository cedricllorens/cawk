#%SED_GAWK_PATH%

# ------------------------------------------------------------
# cawk is subjet to a MIT open-source licence
# please refer to the MIT licence file for further information
#
# for %SED_VAR% change like SED_GAWK_PATH, etc. please refer to
# file support/tests.sed for further information
#
# this script converts a CSV file to a JSON file.
# the file format is as follows: 
# 1) conf_name   : name of the configuration
# 2) test_name   : name of the test
# 3) error_line  : output describing the error
# 4) line_nb     : line number
# 5) risk_level  : high, medium, low, info
# 6) status_code : pass, error, warning
# ------------------------------------------------------------

@include %SED_INCLUDE_PATH%

BEGIN {
    FS = ";"                # field separator
    first = 1               # first flag
    print "["               # json array start
}

# function to escape JSON special characters
function escape_json(str,    result, i, c) {
    result = ""
    for (i = 1; i <= length(str); i++) {
        c = substr(str, i, 1)
        if (c == "\\")
            result = result "\\\\"
        else if (c == "\"")
            result = result "\\\""
        else if (c == "\b")
            result = result "\\b"
        else if (c == "\f")
            result = result "\\f"
        else if (c == "\n")
            result = result "\\n"
        else if (c == "\r")
            result = result "\\r"
        else if (c == "\t")
            result = result "\\t"
        else
            result = result c
    }
    return result
}

{
    # new field except the first one
    if (!first) {
        print ","
    }

    # print the JSON object
    printf "  {\"conf_name\": \"%s\", \"test_name\": \"%s\", \"error_line\": \"%s\", \"line_nb\": \"%s\", \"risk_level\": \"%s\", \"status_code\": \"%s\"}", \
           escape_json($1), escape_json($2), escape_json($3), escape_json($4), escape_json($5), escape_json($6)

    # reset the first flag
    first = 0
}

END {

    # close the JSON array
    print "\n]"
}
